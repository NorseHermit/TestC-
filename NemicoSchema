using UnityEngine;
using UnityEngine.AI;

public class EnemyAI : MonoBehaviour
{
    public Transform player; // Riferimento al giocatore
    public float detectionRange = 10f; // Distanza di rilevamento
    public float attackRange = 2f; // Distanza di attacco
    public float attackCooldown = 1f; // Tempo di attesa tra gli attacchi
    public float enemySpeed = 3.5f; // Velocità del nemico

    private NavMeshAgent navAgent;
    private float lastAttackTime;

    void Start()
    {
        navAgent = GetComponent<NavMeshAgent>();
        navAgent.speed = enemySpeed;
        lastAttackTime = -attackCooldown; // Assicura che il nemico possa attaccare subito
    }

    void Update()
    {
        float distanceToPlayer = Vector3.Distance(transform.position, player.position);

        if (distanceToPlayer <= detectionRange)
        {
            // Insegui il giocatore
            navAgent.SetDestination(player.position);

            if (distanceToPlayer <= attackRange)
            {
                // Se il giocatore è abbastanza vicino, attacca
                if (Time.time >= lastAttackTime + attackCooldown)
                {
                    Attack();
                    lastAttackTime = Time.time;
                }
            }
        }
        else
        {
            // Ferma il nemico quando il giocatore è fuori portata
            navAgent.ResetPath();
        }
    }

    void Attack()
    {
        // Implementa il tuo codice di attacco qui
        Debug.Log("Enemy attacks!");
    }

    // Puoi aggiungere una funzione per disegnare il raggio di rilevamento e di attacco in scena
    void OnDrawGizmosSelected()
    {
        Gizmos.color = Color.red;
        Gizmos.DrawWireSphere(transform.position, attackRange);
        Gizmos.color = Color.yellow;
        Gizmos.DrawWireSphere(transform.position, detectionRange);
    }
}
